import{S as nr,i as or,s as lr,w as ae,a as P,x as se,c as S,y as re,b as v,f as ne,t as oe,z as le,h as e,k as n,q as s,l as o,m as l,r,p,G as t}from"../../../chunks/index-6be07ad6.js";import{B as pr}from"../../../chunks/BlankLink-db4a2256.js";import{M as fr,S as cr,T as ir}from"../../../chunks/Main-e874f9b3.js";import{S as ur}from"../../../chunks/Seo-8afd16e9.js";function vr(R){let f;return{c(){f=s("Quad Without Vertices")},l(_){f=r(_,"Quad Without Vertices")},m(_,i){v(_,f,i)},d(_){_&&e(f)}}}function _r(R){let f;return{c(){f=s("GitHub repo")},l(_){f=r(_,"GitHub repo")},m(_,i){v(_,f,i)},d(_){_&&e(f)}}}function dr(R){let f,_,i,A,u,w,k,W,$,L,C,Pe,q,Se,H,$e,Ne,m,qt,be,O,ge,U,xe,B,we,Q,Fe,z,Ie,M,Ve,J,Re,j,Ge,Te,N,K,De,X,ke,Y,Le,Z,We,tt,Ce,et,qe,at,He,st,Oe,Ue,Ht,rt,Be,Qe,pe,nt,ot,y,lt,ze,pt,Me,ft,Je,ct,je,it,Ke,ut,Xe,vt,Ye,_t,Ze,dt,ta,ea,fe,Ot,ce,h,Ut,aa,sa,Bt,ra,na,Qt,oa,la,zt,pa,fa,Mt,ca,ia,ie,F,ua,Jt,va,_a,jt,da,ha,ue,ht,b,Kt,Et,Ea,Aa,Xt,At,ma,ya,Yt,mt,Pa,Sa,Zt,yt,$a,Na,ve,Pt,ba,_e,D,ga,te,xa,wa,de,St,Fa,he,$t,Ia,Ee,Nt,bt,d,gt,Va,xt,Ra,wt,Ga,Ft,Ta,It,Da,Vt,ka,Rt,La,Gt,Wa,Tt,Ca,Dt,qa,kt,Ha,Lt,Oa,Wt,Ua,Ba,Ae;return f=new ir({props:{timestamp:1668709650,$$slots:{default:[vr]},$$scope:{ctx:R}}}),u=new pr({props:{href:"https://github.com/cmuratori/refterm",$$slots:{default:[_r]},$$scope:{ctx:R}}}),{c(){ae(f.$$.fragment),_=P(),i=n("p"),A=s(`While researching for a tile-based monospaced font rendering I found
			this `),ae(u.$$.fragment),w=s(" containing code similar to this:"),k=P(),W=n("pre"),$=n("code"),L=n("span"),C=n("span"),Pe=s("vec2 pos = "),q=n("span"),Se=s("vec2"),H=n("span"),$e=s("("),Ne=s(`
`),m=n("span"),qt=n("span"),be=s("    "),O=n("span"),ge=s("2.0"),U=n("span"),xe=s(" * ("),B=n("span"),we=s("float"),Q=n("span"),Fe=s("(gl_VertexID & "),z=n("span"),Ie=s("1"),M=n("span"),Ve=s(") - "),J=n("span"),Re=s("0.5"),j=n("span"),Ge=s("), "),Te=s(`
`),N=n("span"),K=n("span"),De=s("    -("),X=n("span"),ke=s("float"),Y=n("span"),Le=s("(gl_VertexID >> "),Z=n("span"),We=s("1"),tt=n("span"),Ce=s(") - "),et=n("span"),qe=s("0.5"),at=n("span"),He=s(") * "),st=n("span"),Oe=s("2.0"),Ue=s(`
`),Ht=n("span"),rt=n("span"),Be=s(");"),Qe=s(`
`),pe=P(),nt=n("pre"),ot=n("code"),y=n("span"),lt=n("span"),ze=s("gl."),pt=n("span"),Me=s("drawArrays"),ft=n("span"),Je=s("(gl."),ct=n("span"),je=s("TRIANGLE_STRIP"),it=n("span"),Ke=s(", "),ut=n("span"),Xe=s("0"),vt=n("span"),Ye=s(", "),_t=n("span"),Ze=s("4"),dt=n("span"),ta=s(");"),ea=s(`
`),fe=P(),Ot=n("p"),ce=P(),h=n("p"),Ut=n("var"),aa=s("gl_VertexID"),sa=s(` is the zero-based integer index of the
			current vertex. If we think about the index as a 2 bit binary number
			we get
			`),Bt=n("var"),ra=s("0 = 00"),na=s(" bottom-left, "),Qt=n("var"),oa=s("1 = 01"),la=s(` top-left,
			`),zt=n("var"),pa=s("2 = 10"),fa=s(`
			bottom-right,
			`),Mt=n("var"),ca=s("3 = 11"),ia=s(" top-right."),ie=P(),F=n("p"),ua=s("A binary "),Jt=n("var"),va=s("AND"),_a=s(` with 1 gives us the x position and a binary
			`),jt=n("var"),da=s("RIGHT SHIFT"),ha=s(" by 1 gives us the y position."),ue=P(),ht=n("pre"),b=n("code"),Kt=n("span"),Et=n("span"),Ea=s("2---3    0 = 00  |  00 & 01 = 0 (x)  |  00 >> 1 = 0 (y)"),Aa=s(`
`),Xt=n("span"),At=n("span"),ma=s("|\\  |    1 = 01  |  01 & 01 = 1 (x)  |  01 >> 1 = 0 (y)"),ya=s(`
`),Yt=n("span"),mt=n("span"),Pa=s("| \\ |    2 = 10  |  10 & 01 = 0 (x)  |  10 >> 1 = 1 (y)"),Sa=s(`
`),Zt=n("span"),yt=n("span"),$a=s("0---1    3 = 11  |  11 & 01 = 1 (x)  |  11 >> 1 = 1 (y)"),Na=s(`
`),ve=P(),Pt=n("p"),ba=s(`By interpreting these values as an x and y offset we can position
			our vertices getting a quad that goes from 0 to 1 in the top-right
			quadrant.`),_e=P(),D=n("p"),ga=s("Using this together with "),te=n("var"),xa=s("GL_TRIANGLE_STRIP"),wa=s(` gives us two triangles.
			It doesn't work with other modes due to how WebGL / OpenGL handles creating
			the triangles.`),de=P(),St=n("p"),Fa=s(`We can then make it fullscreen as the code above does by remapping
			the values to -1 to 1.`),he=P(),$t=n("p"),Ia=s(`The result of this operation, without remapping, produces the quad
			UV coordinates. The y coordinate is inverted, so we need to remap
			it.`),Ee=P(),Nt=n("pre"),bt=n("code"),d=n("span"),gt=n("span"),Va=s("vec2 uv = "),xt=n("span"),Ra=s("vec2"),wt=n("span"),Ga=s("("),Ft=n("span"),Ta=s("float"),It=n("span"),Da=s("(gl_VertexID & "),Vt=n("span"),ka=s("1"),Rt=n("span"),La=s("), "),Gt=n("span"),Wa=s("1.0"),Tt=n("span"),Ca=s(" - "),Dt=n("span"),qa=s("float"),kt=n("span"),Ha=s("(gl_VertexID >> "),Lt=n("span"),Oa=s("1"),Wt=n("span"),Ua=s("));"),Ba=s(`
`),this.h()},l(a){se(f.$$.fragment,a),_=S(a),i=o(a,"P",{});var c=l(i);A=r(c,`While researching for a tile-based monospaced font rendering I found
			this `),se(u.$$.fragment,c),w=r(c," containing code similar to this:"),c.forEach(e),k=S(a),W=o(a,"PRE",{});var ee=l(W);$=o(ee,"CODE",{});var g=l($);L=o(g,"SPAN",{});var me=l(L);C=o(me,"SPAN",{style:!0});var Ma=l(C);Pe=r(Ma,"vec2 pos = "),Ma.forEach(e),q=o(me,"SPAN",{style:!0});var Ja=l(q);Se=r(Ja,"vec2"),Ja.forEach(e),H=o(me,"SPAN",{style:!0});var ja=l(H);$e=r(ja,"("),ja.forEach(e),me.forEach(e),Ne=r(g,`
`),m=o(g,"SPAN",{});var I=l(m);qt=o(I,"SPAN",{});var Ka=l(qt);be=r(Ka,"    "),Ka.forEach(e),O=o(I,"SPAN",{style:!0});var Xa=l(O);ge=r(Xa,"2.0"),Xa.forEach(e),U=o(I,"SPAN",{style:!0});var Ya=l(U);xe=r(Ya," * ("),Ya.forEach(e),B=o(I,"SPAN",{style:!0});var Za=l(B);we=r(Za,"float"),Za.forEach(e),Q=o(I,"SPAN",{style:!0});var ts=l(Q);Fe=r(ts,"(gl_VertexID & "),ts.forEach(e),z=o(I,"SPAN",{style:!0});var es=l(z);Ie=r(es,"1"),es.forEach(e),M=o(I,"SPAN",{style:!0});var as=l(M);Ve=r(as,") - "),as.forEach(e),J=o(I,"SPAN",{style:!0});var ss=l(J);Re=r(ss,"0.5"),ss.forEach(e),j=o(I,"SPAN",{style:!0});var rs=l(j);Ge=r(rs,"), "),rs.forEach(e),I.forEach(e),Te=r(g,`
`),N=o(g,"SPAN",{});var G=l(N);K=o(G,"SPAN",{style:!0});var ns=l(K);De=r(ns,"    -("),ns.forEach(e),X=o(G,"SPAN",{style:!0});var os=l(X);ke=r(os,"float"),os.forEach(e),Y=o(G,"SPAN",{style:!0});var ls=l(Y);Le=r(ls,"(gl_VertexID >> "),ls.forEach(e),Z=o(G,"SPAN",{style:!0});var ps=l(Z);We=r(ps,"1"),ps.forEach(e),tt=o(G,"SPAN",{style:!0});var fs=l(tt);Ce=r(fs,") - "),fs.forEach(e),et=o(G,"SPAN",{style:!0});var cs=l(et);qe=r(cs,"0.5"),cs.forEach(e),at=o(G,"SPAN",{style:!0});var is=l(at);He=r(is,") * "),is.forEach(e),st=o(G,"SPAN",{style:!0});var us=l(st);Oe=r(us,"2.0"),us.forEach(e),G.forEach(e),Ue=r(g,`
`),Ht=o(g,"SPAN",{});var vs=l(Ht);rt=o(vs,"SPAN",{style:!0});var _s=l(rt);Be=r(_s,");"),_s.forEach(e),vs.forEach(e),Qe=r(g,`
`),g.forEach(e),ee.forEach(e),pe=S(a),nt=o(a,"PRE",{});var ds=l(nt);ot=o(ds,"CODE",{});var Qa=l(ot);y=o(Qa,"SPAN",{});var V=l(y);lt=o(V,"SPAN",{style:!0});var hs=l(lt);ze=r(hs,"gl."),hs.forEach(e),pt=o(V,"SPAN",{style:!0});var Es=l(pt);Me=r(Es,"drawArrays"),Es.forEach(e),ft=o(V,"SPAN",{style:!0});var As=l(ft);Je=r(As,"(gl."),As.forEach(e),ct=o(V,"SPAN",{style:!0});var ms=l(ct);je=r(ms,"TRIANGLE_STRIP"),ms.forEach(e),it=o(V,"SPAN",{style:!0});var ys=l(it);Ke=r(ys,", "),ys.forEach(e),ut=o(V,"SPAN",{style:!0});var Ps=l(ut);Xe=r(Ps,"0"),Ps.forEach(e),vt=o(V,"SPAN",{style:!0});var Ss=l(vt);Ye=r(Ss,", "),Ss.forEach(e),_t=o(V,"SPAN",{style:!0});var $s=l(_t);Ze=r($s,"4"),$s.forEach(e),dt=o(V,"SPAN",{style:!0});var Ns=l(dt);ta=r(Ns,");"),Ns.forEach(e),V.forEach(e),ea=r(Qa,`
`),Qa.forEach(e),ds.forEach(e),fe=S(a),Ot=o(a,"P",{}),l(Ot).forEach(e),ce=S(a),h=o(a,"P",{});var x=l(h);Ut=o(x,"VAR",{});var bs=l(Ut);aa=r(bs,"gl_VertexID"),bs.forEach(e),sa=r(x,` is the zero-based integer index of the
			current vertex. If we think about the index as a 2 bit binary number
			we get
			`),Bt=o(x,"VAR",{});var gs=l(Bt);ra=r(gs,"0 = 00"),gs.forEach(e),na=r(x," bottom-left, "),Qt=o(x,"VAR",{});var xs=l(Qt);oa=r(xs,"1 = 01"),xs.forEach(e),la=r(x,` top-left,
			`),zt=o(x,"VAR",{});var ws=l(zt);pa=r(ws,"2 = 10"),ws.forEach(e),fa=r(x,`
			bottom-right,
			`),Mt=o(x,"VAR",{});var Fs=l(Mt);ca=r(Fs,"3 = 11"),Fs.forEach(e),ia=r(x," top-right."),x.forEach(e),ie=S(a),F=o(a,"P",{});var Ct=l(F);ua=r(Ct,"A binary "),Jt=o(Ct,"VAR",{});var Is=l(Jt);va=r(Is,"AND"),Is.forEach(e),_a=r(Ct,` with 1 gives us the x position and a binary
			`),jt=o(Ct,"VAR",{});var Vs=l(jt);da=r(Vs,"RIGHT SHIFT"),Vs.forEach(e),ha=r(Ct," by 1 gives us the y position."),Ct.forEach(e),ue=S(a),ht=o(a,"PRE",{});var Rs=l(ht);b=o(Rs,"CODE",{});var T=l(b);Kt=o(T,"SPAN",{});var Gs=l(Kt);Et=o(Gs,"SPAN",{style:!0});var Ts=l(Et);Ea=r(Ts,"2---3    0 = 00  |  00 & 01 = 0 (x)  |  00 >> 1 = 0 (y)"),Ts.forEach(e),Gs.forEach(e),Aa=r(T,`
`),Xt=o(T,"SPAN",{});var Ds=l(Xt);At=o(Ds,"SPAN",{style:!0});var ks=l(At);ma=r(ks,"|\\  |    1 = 01  |  01 & 01 = 1 (x)  |  01 >> 1 = 0 (y)"),ks.forEach(e),Ds.forEach(e),ya=r(T,`
`),Yt=o(T,"SPAN",{});var Ls=l(Yt);mt=o(Ls,"SPAN",{style:!0});var Ws=l(mt);Pa=r(Ws,"| \\ |    2 = 10  |  10 & 01 = 0 (x)  |  10 >> 1 = 1 (y)"),Ws.forEach(e),Ls.forEach(e),Sa=r(T,`
`),Zt=o(T,"SPAN",{});var Cs=l(Zt);yt=o(Cs,"SPAN",{style:!0});var qs=l(yt);$a=r(qs,"0---1    3 = 11  |  11 & 01 = 1 (x)  |  11 >> 1 = 1 (y)"),qs.forEach(e),Cs.forEach(e),Na=r(T,`
`),T.forEach(e),Rs.forEach(e),ve=S(a),Pt=o(a,"P",{});var Hs=l(Pt);ba=r(Hs,`By interpreting these values as an x and y offset we can position
			our vertices getting a quad that goes from 0 to 1 in the top-right
			quadrant.`),Hs.forEach(e),_e=S(a),D=o(a,"P",{});var ye=l(D);ga=r(ye,"Using this together with "),te=o(ye,"VAR",{});var Os=l(te);xa=r(Os,"GL_TRIANGLE_STRIP"),Os.forEach(e),wa=r(ye,` gives us two triangles.
			It doesn't work with other modes due to how WebGL / OpenGL handles creating
			the triangles.`),ye.forEach(e),de=S(a),St=o(a,"P",{});var Us=l(St);Fa=r(Us,`We can then make it fullscreen as the code above does by remapping
			the values to -1 to 1.`),Us.forEach(e),he=S(a),$t=o(a,"P",{});var Bs=l($t);Ia=r(Bs,`The result of this operation, without remapping, produces the quad
			UV coordinates. The y coordinate is inverted, so we need to remap
			it.`),Bs.forEach(e),Ee=S(a),Nt=o(a,"PRE",{});var Qs=l(Nt);bt=o(Qs,"CODE",{});var za=l(bt);d=o(za,"SPAN",{});var E=l(d);gt=o(E,"SPAN",{style:!0});var zs=l(gt);Va=r(zs,"vec2 uv = "),zs.forEach(e),xt=o(E,"SPAN",{style:!0});var Ms=l(xt);Ra=r(Ms,"vec2"),Ms.forEach(e),wt=o(E,"SPAN",{style:!0});var Js=l(wt);Ga=r(Js,"("),Js.forEach(e),Ft=o(E,"SPAN",{style:!0});var js=l(Ft);Ta=r(js,"float"),js.forEach(e),It=o(E,"SPAN",{style:!0});var Ks=l(It);Da=r(Ks,"(gl_VertexID & "),Ks.forEach(e),Vt=o(E,"SPAN",{style:!0});var Xs=l(Vt);ka=r(Xs,"1"),Xs.forEach(e),Rt=o(E,"SPAN",{style:!0});var Ys=l(Rt);La=r(Ys,"), "),Ys.forEach(e),Gt=o(E,"SPAN",{style:!0});var Zs=l(Gt);Wa=r(Zs,"1.0"),Zs.forEach(e),Tt=o(E,"SPAN",{style:!0});var tr=l(Tt);Ca=r(tr," - "),tr.forEach(e),Dt=o(E,"SPAN",{style:!0});var er=l(Dt);qa=r(er,"float"),er.forEach(e),kt=o(E,"SPAN",{style:!0});var ar=l(kt);Ha=r(ar,"(gl_VertexID >> "),ar.forEach(e),Lt=o(E,"SPAN",{style:!0});var sr=l(Lt);Oa=r(sr,"1"),sr.forEach(e),Wt=o(E,"SPAN",{style:!0});var rr=l(Wt);Ua=r(rr,"));"),rr.forEach(e),E.forEach(e),Ba=r(za,`
`),za.forEach(e),Qs.forEach(e),this.h()},h(){p(C,"color","#24292F"),p(q,"color","#0550AE"),p(H,"color","#24292F"),p(O,"color","#0550AE"),p(U,"color","#24292F"),p(B,"color","#CF222E"),p(Q,"color","#24292F"),p(z,"color","#0550AE"),p(M,"color","#24292F"),p(J,"color","#0550AE"),p(j,"color","#24292F"),p(K,"color","#24292F"),p(X,"color","#CF222E"),p(Y,"color","#24292F"),p(Z,"color","#0550AE"),p(tt,"color","#24292F"),p(et,"color","#0550AE"),p(at,"color","#24292F"),p(st,"color","#0550AE"),p(rt,"color","#24292F"),p(lt,"color","#24292F"),p(pt,"color","#8250DF"),p(ft,"color","#24292F"),p(ct,"color","#0550AE"),p(it,"color","#24292F"),p(ut,"color","#0550AE"),p(vt,"color","#24292F"),p(_t,"color","#0550AE"),p(dt,"color","#24292F"),p(Et,"color","undefined"),p(At,"color","undefined"),p(mt,"color","undefined"),p(yt,"color","undefined"),p(gt,"color","#24292F"),p(xt,"color","#0550AE"),p(wt,"color","#24292F"),p(Ft,"color","#CF222E"),p(It,"color","#24292F"),p(Vt,"color","#0550AE"),p(Rt,"color","#24292F"),p(Gt,"color","#0550AE"),p(Tt,"color","#24292F"),p(Dt,"color","#CF222E"),p(kt,"color","#24292F"),p(Lt,"color","#0550AE"),p(Wt,"color","#24292F")},m(a,c){re(f,a,c),v(a,_,c),v(a,i,c),t(i,A),re(u,i,null),t(i,w),v(a,k,c),v(a,W,c),t(W,$),t($,L),t(L,C),t(C,Pe),t(L,q),t(q,Se),t(L,H),t(H,$e),t($,Ne),t($,m),t(m,qt),t(qt,be),t(m,O),t(O,ge),t(m,U),t(U,xe),t(m,B),t(B,we),t(m,Q),t(Q,Fe),t(m,z),t(z,Ie),t(m,M),t(M,Ve),t(m,J),t(J,Re),t(m,j),t(j,Ge),t($,Te),t($,N),t(N,K),t(K,De),t(N,X),t(X,ke),t(N,Y),t(Y,Le),t(N,Z),t(Z,We),t(N,tt),t(tt,Ce),t(N,et),t(et,qe),t(N,at),t(at,He),t(N,st),t(st,Oe),t($,Ue),t($,Ht),t(Ht,rt),t(rt,Be),t($,Qe),v(a,pe,c),v(a,nt,c),t(nt,ot),t(ot,y),t(y,lt),t(lt,ze),t(y,pt),t(pt,Me),t(y,ft),t(ft,Je),t(y,ct),t(ct,je),t(y,it),t(it,Ke),t(y,ut),t(ut,Xe),t(y,vt),t(vt,Ye),t(y,_t),t(_t,Ze),t(y,dt),t(dt,ta),t(ot,ea),v(a,fe,c),v(a,Ot,c),v(a,ce,c),v(a,h,c),t(h,Ut),t(Ut,aa),t(h,sa),t(h,Bt),t(Bt,ra),t(h,na),t(h,Qt),t(Qt,oa),t(h,la),t(h,zt),t(zt,pa),t(h,fa),t(h,Mt),t(Mt,ca),t(h,ia),v(a,ie,c),v(a,F,c),t(F,ua),t(F,Jt),t(Jt,va),t(F,_a),t(F,jt),t(jt,da),t(F,ha),v(a,ue,c),v(a,ht,c),t(ht,b),t(b,Kt),t(Kt,Et),t(Et,Ea),t(b,Aa),t(b,Xt),t(Xt,At),t(At,ma),t(b,ya),t(b,Yt),t(Yt,mt),t(mt,Pa),t(b,Sa),t(b,Zt),t(Zt,yt),t(yt,$a),t(b,Na),v(a,ve,c),v(a,Pt,c),t(Pt,ba),v(a,_e,c),v(a,D,c),t(D,ga),t(D,te),t(te,xa),t(D,wa),v(a,de,c),v(a,St,c),t(St,Fa),v(a,he,c),v(a,$t,c),t($t,Ia),v(a,Ee,c),v(a,Nt,c),t(Nt,bt),t(bt,d),t(d,gt),t(gt,Va),t(d,xt),t(xt,Ra),t(d,wt),t(wt,Ga),t(d,Ft),t(Ft,Ta),t(d,It),t(It,Da),t(d,Vt),t(Vt,ka),t(d,Rt),t(Rt,La),t(d,Gt),t(Gt,Wa),t(d,Tt),t(Tt,Ca),t(d,Dt),t(Dt,qa),t(d,kt),t(kt,Ha),t(d,Lt),t(Lt,Oa),t(d,Wt),t(Wt,Ua),t(bt,Ba),Ae=!0},p(a,c){const ee={};c&1&&(ee.$$scope={dirty:c,ctx:a}),f.$set(ee);const g={};c&1&&(g.$$scope={dirty:c,ctx:a}),u.$set(g)},i(a){Ae||(ne(f.$$.fragment,a),ne(u.$$.fragment,a),Ae=!0)},o(a){oe(f.$$.fragment,a),oe(u.$$.fragment,a),Ae=!1},d(a){le(f,a),a&&e(_),a&&e(i),le(u),a&&e(k),a&&e(W),a&&e(pe),a&&e(nt),a&&e(fe),a&&e(Ot),a&&e(ce),a&&e(h),a&&e(ie),a&&e(F),a&&e(ue),a&&e(ht),a&&e(ve),a&&e(Pt),a&&e(_e),a&&e(D),a&&e(de),a&&e(St),a&&e(he),a&&e($t),a&&e(Ee),a&&e(Nt)}}}function hr(R){let f,_;return f=new cr({props:{$$slots:{default:[dr]},$$scope:{ctx:R}}}),{c(){ae(f.$$.fragment)},l(i){se(f.$$.fragment,i)},m(i,A){re(f,i,A),_=!0},p(i,A){const u={};A&1&&(u.$$scope={dirty:A,ctx:i}),f.$set(u)},i(i){_||(ne(f.$$.fragment,i),_=!0)},o(i){oe(f.$$.fragment,i),_=!1},d(i){le(f,i)}}}function Er(R){let f,_,i,A;return f=new ur({props:{title:"Quad Without Vertices",description:"WebGL Quad without vertices trick",keywords:"Javascript, WebGL2, Gamedev, Shaders, GPU, Geometry, Instancing, Tricks, Triangle Strip"}}),i=new fr({props:{$$slots:{default:[hr]},$$scope:{ctx:R}}}),{c(){ae(f.$$.fragment),_=P(),ae(i.$$.fragment)},l(u){se(f.$$.fragment,u),_=S(u),se(i.$$.fragment,u)},m(u,w){re(f,u,w),v(u,_,w),re(i,u,w),A=!0},p(u,[w]){const k={};w&1&&(k.$$scope={dirty:w,ctx:u}),i.$set(k)},i(u){A||(ne(f.$$.fragment,u),ne(i.$$.fragment,u),A=!0)},o(u){oe(f.$$.fragment,u),oe(i.$$.fragment,u),A=!1},d(u){le(f,u),u&&e(_),le(i,u)}}}class Sr extends nr{constructor(f){super(),or(this,f,null,Er,lr,{})}}export{Sr as default};
